{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% extends "template.njk" %}

{% block head %}
  {{ super() }}
  <style>
    .task-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 20px;
      margin: 30px 0;
    }
    
    .task-card {
      background: #fff;
      border-radius: 8px;
      padding: 24px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      border-left: 4px solid #1d70b8;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .task-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 16px rgba(0,0,0,0.15);
    }
    
    .task-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 12px;
      color: #0b0c0c;
    }
    
    .task-description {
      color: #505a5f;
      margin-bottom: 16px;
      font-size: 0.95rem;
      line-height: 1.4;
    }
    
    .task-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 16px;
    }
    
    .task-due {
      font-size: 0.9rem;
      color: #626a6e;
    }
    
    .task-actions {
      display: flex;
      gap: 12px;
    }
    
    .task-action-btn {
      padding: 8px 16px;
      border-radius: 4px;
      text-decoration: none;
      font-size: 0.9rem;
      font-weight: 500;
      transition: background-color 0.2s ease;
    }
    
    .task-action-edit {
      background: #f3f2f1;
      color: #0b0c0c;
    }
    
    .task-action-edit:hover {
      background: #e9e8e7;
    }
    
    .task-action-delete {
      background: #d4351c;
      color: white;
    }
    
    .task-action-delete:hover {
      background: #b91d00;
    }
    
    .stats-bar {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin: 30px 0;
    }
    
    .stat-card {
      background: linear-gradient(135deg, #1d70b8 0%, #2f89c7 100%);
      color: white;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
    }
    
    .stat-number {
      font-size: 2rem;
      font-weight: 700;
      display: block;
    }
    
    .stat-label {
      font-size: 0.9rem;
      opacity: 0.9;
    }
    
    .header-section {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    
    .search-bar {
      background: white;
      border: 2px solid #b1b4b6;
      border-radius: 4px;
      padding: 12px 16px;
      width: 300px;
      margin-bottom: 20px;
    }
  </style>
{% endblock %}

{% block content %}
  <div class="header-section">
    <h1 class="govuk-heading-xl">Task Management</h1>
    {{ govukButton({
      text: "Add New Task",
      href: "/tasks/create",
      classes: "govuk-button--start"
    }) }}
  </div>

  <input type="text" class="search-bar" placeholder="Search tasks..." id="taskSearch">

  {% if stats %}
  <div class="stats-bar">
    <div class="stat-card">
      <span class="stat-number">{{ stats.todoCount }}</span>
      <span class="stat-label">To Do</span>
    </div>
    <div class="stat-card" style="background: linear-gradient(135deg, #f47738 0%, #ff6b47 100%);">
      <span class="stat-number">{{ stats.inProgressCount }}</span>
      <span class="stat-label">In Progress</span>
    </div>
    <div class="stat-card" style="background: linear-gradient(135deg, #00703c 0%, #00a551 100%);">
      <span class="stat-number">{{ stats.completedCount }}</span>
      <span class="stat-label">Completed</span>
    </div>
  </div>
  {% endif %}

  {% if tasks and tasks.length > 0 %}
    <div class="task-grid">
      {% for task in tasks %}
        <div class="task-card">
          <h2 class="task-title">{{ task.title }}</h2>
          <p class="task-description">{{ task.description or "No description provided" }}</p>
          
          <div class="task-meta">
            <div>
              {{ govukTag({
                text: task.status.replace('_', ' '),
                classes: "govuk-tag--" + ("grey" if task.status == "TODO" else ("yellow" if task.status == "IN_PROGRESS" else "green"))
              }) }}
            </div>
            <div class="task-due">
              Due: {{ task.dueDateTime | replace("T", " ") | replace(":00.000", "") }}
            </div>
          </div>
          
          <div class="task-actions">
            <a href="/tasks/{{ task.id }}/edit" class="task-action-btn task-action-edit">Edit</a>
            <a href="/tasks/{{ task.id }}/delete" class="task-action-btn task-action-delete">Delete</a>
          </div>
        </div>
      {% endfor %}
    </div>
  {% else %}
    <div style="text-align: center; padding: 60px 20px;">
      <h2 class="govuk-heading-m">No tasks yet</h2>
      <p>Get started by creating your first task.</p>
      {{ govukButton({
        text: "Create First Task",
        href: "/tasks/create",
        classes: "govuk-button--start"
      }) }}
    </div>
  {% endif %}

  <script>
    // Simple search functionality
    document.getElementById('taskSearch').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const cards = document.querySelectorAll('.task-card');
      
      cards.forEach(card => {
        const title = card.querySelector('.task-title').textContent.toLowerCase();
        const description = card.querySelector('.task-description').textContent.toLowerCase();
        
        if (title.includes(searchTerm) || description.includes(searchTerm)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });
  </script>
{% endblock %}